type User @collection(name: "user") {
  uid: ID!
  firstName: String!
  lastName: String!
  email: String! @unique
  emailVerified: Boolean!
  submittedApplication: Boolean
  isActivated: Boolean
  initialAccountCreation: Boolean
  isActive: Boolean!
  accType: userAccType!
  school: School!
  classes: [Classes!] @relation
  children: [Student!] @relation
  createdAt: Time
  updatedAt: Time
}
# scalar Time
enum userAccType {
  Admin
  Teacher
  Parent
}
enum SchoolType {
  Islamic
  Masjid
  Other
}
enum AssignmentStatus {
  New
  Completed
  Edited
}
type School @collection(name: "school") {
  schoolName: String!
  email: String
  state: String
  city: String
  phone: String
  type: SchoolType!
  users: [User!] @relation
}
type Student @collection(name: "student") {
  studentId: ID!
  firstName: String!
  lastName: String!
  age: Int
  grade: String
  isActive: Boolean!
  parent: User!
  school: School!
  assignments: [Assignment!] @relation
  classes: [Classes!] @relation
  createdAt: Time
  updatedAt: Time
}
type Classes @collection(name: "classes") {
  name: String!
  subjects: [String!]
  isActive: Boolean!
  teacher: User!
  school: School!
  students: [Student!] @relation
  createdAt: Time
  updatedAt: Time
}
type Assignment @collection(name: "assignment") {
  subject: String
  notes: String
  surah: String
  start: String
  end: String
  status: AssignmentStatus
  grade: String
  gradeNotes: String
  classRef: Classes!
  student: Student!
  teacher: User!
  school: School!
  createdAt: Time
  updatedAt: Time
  completedAt: Time
}
type Query {
  findUserByID(uid: ID!): User
}
